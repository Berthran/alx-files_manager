// Import the Redis client and MongoDB Client utility
const sha1 = require('sha1');
const dbClient = require('../utils/db');

/**
 * UsersController class contains methods to handle user related API endpoints
 */
class UsersController {
  static async postNew(req, res) {
    // Extract the email and password from the request object
    const { email, password } = req.body;

    // Check if email is provided
    if (!email) {
      return res.status(400).json({ error: 'Missing email' });
    }

    // Check if password is provided
    if (!password) {
      return res.status(400).json({ error: 'Missing password' });
    }

    try {
      // Query the database to find a user with the provided email
      const existingUser = await dbClient.db.collection('users').findOne({ email });

      if (existingUser) {
        // If a user with the email exists, return an error
        return res.status(400).json({ error: 'Already exist' });
      }
      // If email does not exist, continue with user creation
      const hashedPassword = sha1(password); // hash password

      // Insert the new user into the database
      const result = await dbClient.db.collection('users').insertOne({ email, password: hashedPassword });

      // Return the new user with the email and id (auto-generated by MongoDB)
      return res.status(201).json({
        id: result.ops[0]._id,
        email: result.ops[0].email,

      });
    } catch (error) {
      // Handle any database errors
      return res.status(500).json({ error: 'Database error' });
    }
  }
}

module.exports = UsersController;
